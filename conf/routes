#*********************************************************************************************************
# Common
#*********************************************************************************************************

# Home page
GET            /                                        controllers.ApplicationController.index()

# CORS
OPTIONS        /api/*anyPath                            controllers.auth.Cors.options(anyPath)

# Admin Authentication
POST           /api/admin/auth/login/:client            controllers.auth.AdminAuthentications.login(client : String)
POST           /api/admin/auth/exchangeAuthCode/        controllers.auth.AdminAuthentications.exchangeAuthCode()
POST           /api/admin/auth/refreshToken/            controllers.auth.AdminAuthentications.refreshToken()
POST           /api/admin/auth/logout/                  controllers.auth.AdminAuthentications.logout()
PUT            /api/admin/auth/password/                controllers.auth.AdminAuthentications.updatePassword()

# Mod Authentication
POST           /api/mod/auth/login/:client              controllers.auth.ModAuthentications.login(client : String)
POST           /api/mod/auth/exchangeAuthCode/          controllers.auth.ModAuthentications.exchangeAuthCode()
POST           /api/mod/auth/refreshToken/              controllers.auth.ModAuthentications.refreshToken()
POST           /api/mod/auth/logout/                    controllers.auth.ModAuthentications.logout()
PUT            /api/mod/auth/password/                  controllers.auth.ModAuthentications.updatePassword()

# User Authentication
POST           /api/user/auth/login/:client             controllers.auth.UserAuthentications.login(client : String)
POST           /api/user/auth/exchangeAuthCode/         controllers.auth.UserAuthentications.exchangeAuthCode()
POST           /api/user/auth/refreshToken/             controllers.auth.UserAuthentications.refreshToken()
POST           /api/user/auth/logout/                   controllers.auth.UserAuthentications.logout()

#*********************************************************************************************************
# Settings
#*********************************************************************************************************
POST           /api/setting/                            controllers.SettingsController.create()
GET            /api/setting/                            controllers.SettingsController.list(offset : java.lang.Integer ?=0, limit : java.lang.Integer ?= 50)
GET            /api/setting/:id                         controllers.SettingsController.load(id : String)
PUT            /api/setting/:id                         controllers.SettingsController.update(id : String)
DELETE         /api/setting/:id                         controllers.SettingsController.delete(id : String)

#*********************************************************************************************************
#  Admin Actions
#*********************************************************************************************************

# Admin
GET            /api/admin/my                            controllers.AdminController.my()
POST           /api/admin/                              controllers.AdminController.create()
GET            /api/admin/                              controllers.AdminController.list(offset : java.lang.Integer ?=0, limit : java.lang.Integer ?= 50,  superAdmin : java.lang.Boolean ?= null)
GET            /api/admin/:id                           controllers.AdminController.load(id : String)
PUT            /api/admin/                              controllers.AdminController.update()
PUT            /api/admin/:id                           controllers.AdminController.update(id : String)
DELETE         /api/admin/:id                           controllers.AdminController.delete(id : String)
PUT            /api/admin/:id/deactivate/               controllers.AdminController.deactivate(id : String)
PUT            /api/admin/:id/activate/                 controllers.AdminController.activate(id : String)

# Mod
POST           /api/admin/mod/                          controllers.AdminController.createMod()
GET            /api/admin/mod/                          controllers.AdminController.listMod(offset : java.lang.Integer ?=0, limit : java.lang.Integer ?= 50,  modLevel : java.lang.Integer ?= null, board : String ?= null)
GET            /api/admin/mod/:id                       controllers.AdminController.loadMod(id : String)
PUT            /api/admin/mod/:id                       controllers.AdminController.updateMod(id : String)
DELETE         /api/admin/mod/:id                       controllers.AdminController.deleteMod(id : String)
PUT            /api/admin/mod/:id/deactivate/           controllers.AdminController.deactivateMod(id : String)
PUT            /api/admin/mod/:id/activate/             controllers.AdminController.activateMod(id : String)

# Board
POST           /api/admin/board/                        controllers.BoardController.createAsAdmin()
GET            /api/admin/board/                        controllers.BoardController.listAsAdmin(offset : java.lang.Integer ?=0, limit : java.lang.Integer ?= 50)
GET            /api/admin/board/:id                     controllers.BoardController.loadAsAdmin(id : String)
GET            /api/admin/board/:id/slug/               controllers.BoardController.loadBySlugAsAdmin(slug : String)
PUT            /api/admin/board/:id                     controllers.BoardController.updateAsAdmin(id : String)
DELETE         /api/admin/board/:id                     controllers.BoardController.deleteAsAdmin(id : String)
PUT            /api/admin/board/:id/deactivate/         controllers.BoardController.deactivateAsAdmin(id : String)
PUT            /api/admin/board/:id/activate/           controllers.BoardController.activateAsAdmin(id : String)

# Thread

#*********************************************************************************************************
#  Mod Actions
#*********************************************************************************************************

# Mod
GET            /api/mod/my                              controllers.ModController.my()
POST           /api/mod/                                controllers.ModController.create()
GET            /api/mod/                                controllers.ModController.list(offset : java.lang.Integer ?=0, limit : java.lang.Integer ?= 50,  modLevel : java.lang.Integer ?= null, board : String ?= null)
GET            /api/mod/:id                             controllers.ModController.load(id : String)
PUT            /api/mod/                                controllers.ModController.update()
PUT            /api/mod/:id                             controllers.ModController.update(id : String)
DELETE         /api/mod/:id                             controllers.ModController.delete(id : String)
PUT            /api/mod/:id/deactivate/                 controllers.ModController.deactivate(id : String)
PUT            /api/mod/:id/activate/                   controllers.ModController.activate(id : String)

# Board
POST           /api/mod/board/                          controllers.BoardController.createAsMod()
GET            /api/mod/board/                          controllers.BoardController.listAsMod(offset : java.lang.Integer ?=0, limit : java.lang.Integer ?= 50)
GET            /api/mod/board/:id                       controllers.BoardController.loadAsMod(id : String)
GET            /api/mod/board/:id/slug/                 controllers.BoardController.loadBySlugAsMod(slug : String)
PUT            /api/mod/board/:id                       controllers.BoardController.updateAsMod(id : String)
DELETE         /api/mod/board/:id                       controllers.BoardController.deleteAsMod(id : String)
PUT            /api/mod/board/:id/deactivate/           controllers.BoardController.deactivateAsMod(id : String)
PUT            /api/mod/board/:id/activate/             controllers.BoardController.activateAsMod(id : String)

# Thread

#*********************************************************************************************************
#  User Actions
#*********************************************************************************************************

# Board
GET            /api/board/                              controllers.BoardController.list(offset : java.lang.Integer ?=0, limit : java.lang.Integer ?= 50)
GET            /api/board/:id                           controllers.BoardController.load(id : String)
GET            /api/board/:id/slug                      controllers.BoardController.loadBySlug(slug : String)

# Thread

#*********************************************************************************************************
#  Static
#*********************************************************************************************************

# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                            controllers.Assets.at(path="/public", file)

